<?php

/**
 * @file
 * Helper functions.
 */

/**
 * Implements hook_field_formatter_info().
 */
function novo_formatters_field_formatter_info() {
  $info = field_info_field_types();
  $formatters = array(
    'icon_times' => array(
      'label' => t('Icon times'),
      'field types' => array('number_integer'),
    ),
    'date_age' => array(
      'label' => t('Date and age'),
      'field types' => array('date', 'datestamp', 'datetime'),
    ),
  );

  return $formatters;
}

/**
 * Implements hook_theme().
 */
function novo_formatters_theme($existing, $type, $theme, $path) {
  return array(
    'icon_clock' => array(
      'variables' => array('times' => NULL),
      'template' => 'templates/icon_clock',
    ),
    'date_age' => array(
      'variables' => array('dob' => NULL, 'age' => NULL),
      'template' => 'templates/date_age',
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function novo_formatters_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = [];
  $type = $display['type'];

  switch ($type) {
    case 'icon_times':
      $times = (int) $items[0]['value'];
      $element[] = array(
        '#theme' => 'icon_clock',
        '#times' => $times,
      );
      break;

    case 'date_age':
      $dob = format_date($items[0]['value'], 'custom', 'm/d/Y');
      $date_diff = date_diff(new DateTime($dob), new DateTime());
      $age = $date_diff->y;
      $element[] = array(
        '#theme' => 'date_age',
        '#dob' => $dob,
        '#age' => $age,
      );
      break;
  }

  return $element;
}
