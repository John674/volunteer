<?php

/**
 * @file
 * Helper functions.
 */

define("NOVO_MASTER_NOT_VIEW_DISPLAY_CONTENT_TYPES", serialize(array(
  "program",
  "kids",
  "attendance",
  "locations",
  "mentors",
  "partner",
  "staff"
)));

define("NOVO_MASTER_ADD_BUTTON_VIEW_NAMES", serialize(array(
  'kids',
  'attendance',
  'locations',
  'partners',
  'programs',
  'staff',
  'volunteers',
  'mentors'
)));

/**
 * Preprocess page.
 */
function novo_master_preprocess_page() {

}

/**
 * Implements hook_form_alter().
 */
function novo_master_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['actions']['publish']['#value'])) {
    if ($form['actions']['publish']['#value'] == "Publish") {
      $form['actions']['publish']['#value'] = t("Active");
    }
    else {
      $form['actions']['publish']['#value'] = t("Not active");
    }
  }

  if (($form_id == "user_profile_form" || $form_id == "user_register_form") && user_access("novo master edit roles")) {
    $form['account']['roles']['#access'] = TRUE;
  }
}

/**
 * Implements hook_permission().
 */
function novo_master_permission() {
  return array(
    'novo master edit roles' => array(
      'title' => t('Allow edit roles for users'),
      'description' => t('Allow edit roles for any user.'),
    ),
  );
}

/**
 * Implements hook_menu_alter().
 */
function novo_master_menu_alter(&$items) {
  $items['node/%node/view']['access callback'] = 'novo_master_disable_node_view';
  $items['node/%node/view']['access arguments'] = array(1);

  $items['node/add']['access callback'] = 'novo_master_disable_node_add_page';
}

/**
 * Access node view tab callback.
 */
function novo_master_disable_node_view($node) {
  $now_view_content_types = unserialize(NOVO_MASTER_NOT_VIEW_DISPLAY_CONTENT_TYPES);
  if (in_array($node->type, $now_view_content_types)) {
    return FALSE;
  }

  if ($node->type == 'reference_request' && function_exists("novo_ref_request_check_hash_access")) {
    return novo_ref_request_check_hash_access($node);
  }

  return user_access('access content');
}

/**
 * Access to node/add page.
 */
function novo_master_disable_node_add_page() {
  global $user;

  return ($user->uid == 1) ? TRUE : FALSE;
}

/**
 * Implements hook_preprocess_node().
 */
function novo_master_preprocess_node($variables) {
  $now_view_content_types = unserialize(NOVO_MASTER_NOT_VIEW_DISPLAY_CONTENT_TYPES);
  if (in_array($variables['type'], $now_view_content_types)) {
    if (
      isset($variables['node']) &&
      isset($variables['view_mode']) &&
      $variables['view_mode'] == "full" &&
      node_access("update", $variables['node'])
    ) {
      drupal_goto("node/" . $variables['nid'] . "/edit");
    }
  }
}

/**
 * Implements hook_preprocess_views_view().
 */
function novo_master_preprocess_views_view(&$vars) {
  // Add "Add +" buttons to views.
  $view_names = unserialize(NOVO_MASTER_ADD_BUTTON_VIEW_NAMES);
  if (isset($vars['name']) && isset($vars['display_id']) && in_array($vars['name'], $view_names) && $vars['display_id'] == 'page') {
    $type = (isset($vars['view']->filter['type']->value)) ? $vars['view']->filter['type']->value : array();
    $type = reset($type);
    if (!empty($type)) {
      $icon = '<span class="glyphicon glyphicon-plus" aria-hidden="true"></span>';
      if ($vars['name'] == "volunteers") {
        $add_link = "admin/people/create";
        $destination = "users";
      }
      else {
        $add_link = "node/add/" . $type;
        $destination = drupal_get_destination();
      }


      $btn = l(t("Add !icon", array("!icon" => $icon)), $add_link, array(
        "query" => $destination,
        "html" => TRUE,
        "attributes" => array(
          "class" => array(
            "btn",
            "btn-primary",
            "btn-sm",
            "novo-entity-add-btn"
          )
        )
      ));

      $vars['attachment_before'] .= $btn;
      $vars['attachment_after'] .= $btn;
    }
  }
}
